// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WebAPI.Data;

namespace SmartSchool.WebAPI.Migrations
{
    [DbContext(typeof(SmartContext))]
    [Migration("20201207031803_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Technologies for Business"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Information systems"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Computer science"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PrerequisiteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Workload")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PrerequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Diciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Math",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Math",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Physics",
                            TeacherId = 2,
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Portuguese",
                            TeacherId = 3,
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "English",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "English",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "English",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programming",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programming",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programming",
                            TeacherId = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Birth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(2670),
                            Name = "Kevin",
                            Phone = "33225555",
                            Registration = 1,
                            Surname = "Hart"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Birth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(7100),
                            Name = "Will",
                            Phone = "3354288",
                            Registration = 2,
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Birth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(7130),
                            Name = "Ice",
                            Phone = "55668899",
                            Registration = 3,
                            Surname = "Cube"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Birth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(7130),
                            Name = "Jack",
                            Phone = "6565659",
                            Registration = 4,
                            Surname = "Black"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Birth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(7140),
                            Name = "Karen",
                            Phone = "565685415",
                            Registration = 5,
                            Surname = "Gilian"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Birth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(7150),
                            Name = "Katy",
                            Phone = "456454545",
                            Registration = 6,
                            Surname = "Perry"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Birth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(7160),
                            Name = "Stefani",
                            Phone = "9874512",
                            Registration = 7,
                            Surname = "Joanne"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInit")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInit")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Grade")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDiscipline");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(8920)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(9980)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(9990)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(9990)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 58, DateTimeKind.Local).AddTicks(9990)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(10)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(10)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(10)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(10)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(20)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(20)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(20)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(20)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(30)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(30)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(30)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(30)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(40)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 59, DateTimeKind.Local).AddTicks(40)
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 31, DateTimeKind.Local).AddTicks(4970),
                            Name = "Michael",
                            Registration = 1,
                            Surname = "Doll"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 51, DateTimeKind.Local).AddTicks(3020),
                            Name = "Jacob",
                            Registration = 2,
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 51, DateTimeKind.Local).AddTicks(3050),
                            Name = "Tina",
                            Registration = 3,
                            Surname = "Kent"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 51, DateTimeKind.Local).AddTicks(3050),
                            Name = "Karen",
                            Registration = 4,
                            Surname = "Harper"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            DateInit = new DateTime(2020, 12, 7, 0, 18, 3, 51, DateTimeKind.Local).AddTicks(3050),
                            Name = "Susan",
                            Registration = 5,
                            Surname = "Lee"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Discipline", "Prerequisite")
                        .WithMany()
                        .HasForeignKey("PrerequisiteId");

                    b.HasOne("SmartSchool.WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Discipline")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentCourse", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentDiscipline", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Discipline", "Discipline")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Student", "Student")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
